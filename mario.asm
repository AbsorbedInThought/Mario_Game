.MODEL LARGE
.STACK 16384

.data
ENEMYCLR BYTE 9,9,9,9,9,9,6,6,6,6,9,9,9,9,9,9 ;ENEMY COLORS
	BYTE 9,9,9,9,9,6,6,6,6,6,6,6,9,9,9,9
	BYTE 9,9,9,9,6,6,6,6,6,6,6,6,6,9,9,9
	BYTE 9,9,9,6,6,6,6,6,6,6,6,6,6,6,9,9
	BYTE 9,9,6,0,0,6,6,6,6,6,6,6,0,0,6,9
	BYTE 9,6,6,6,15,0,6,6,6,6,0,15,6,6,6,9
	BYTE 9,6,6,6,15,0,6,6,6,6,0,15,6,6,6,9
	BYTE 6,6,6,6,15,0,15,6,6,15,0,15,6,6,6,6
	BYTE 6,6,6,6,15,15,15,6,6,15,15,15,6,6,6,6
	BYTE 6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6
	BYTE 9,6,6,6,6,15,15,15,15,15,15,6,6,6,6,9
	BYTE 9,9,9,9,15,15,15,15,15,15,15,15,9,9,9,9
	BYTE 9,9,0,0,15,15,15,15,15,15,15,15,0,0,9,9
	BYTE 9,0,0,0,0,0,15,15,15,15,0,0,0,0,0,9
	BYTE 9,0,0,0,0,0,0,15,15,0,0,0,0,0,0,9
	BYTE 9,9,0,0,0,0,0,9,9,0,0,0,0,0,9,9

CLRARR BYTE 9,9,9,4,4,4,4,4,9,9,9,9  ;MARIO COLORS
	BYTE	9,9,4,4,4,4,4,4,4,4,4,9
	BYTE	9,9,0,0,0,15,15,0,15,9,9,9
	BYTE	9,0,15,0,15,15,15,0,15,15,15,9
	BYTE	9,0,15,0,0,15,15,15,0,15,15,15
	BYTE	9,0,0,15,15,15,15,0,0,0,0,9
	BYTE	9,9,15,15,15,15,15,15,15,15,9,9
	BYTE	9,9,0,0,4,0,0,0,9,9,9,9
	BYTE	9,0,0,0,4,0,0,4,0,0,0,9
	BYTE	0,0,0,0,4,4,4,4,0,0,0,0
	BYTE	15,15,0,4,14,4,4,14,4,0,15,15
	BYTE	15,15,15,4,4,4,4,4,4,15,15,15
	BYTE	15,15,4,4,4,4,4,4,4,4,15,15
	BYTE	9,9,4,4,4,9,9,4,4,4,15,15
	BYTE	9,9,4,4,4,9,9,4,4,4,9,9
	BYTE	9,0,0,0,9,9,9,9,0,0,0,9
	BYTE	0,0,0,0,9,9,9,9,0,0,0,0
	
BOWSERCLR BYTE 9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,9,9
	BYTE 9,9,9,9,9,9,0,4,4,4,4,0,9,9,9,9,9,9
	BYTE 0,0,9,9,0,0,4,4,4,4,4,4,0,0,9,9,0,0
	BYTE 0,14,0,0,4,0,4,4,4,4,4,4,0,4,0,0,14,0
	BYTE 0,14,14,14,14,14,0,4,4,4,4,0,14,14,14,14,14,0
	BYTE 9,0,14,14,4,4,4,2,2,2,2,4,4,4,14,14,0,9
	BYTE 9,9,0,0,0,15,4,4,2,2,4,4,15,0,0,0,9,9
	BYTE 9,9,9,0,2,15,15,15,2,2,15,15,15,2,0,9,9,9
	BYTE 9,9,9,0,0,15,0,15,2,2,15,0,15,0,0,9,9,9
	BYTE 9,9,0,14,14,14,2,14,14,14,14,2,14,14,14,0,9,9
	BYTE 9,9,0,14,14,14,14,0,14,14,0,14,14,14,14,0,9,9
	BYTE 9,9,0,14,14,14,14,14,14,14,14,14,14,14,14,0,9,9
	BYTE 9,9,0,14,14,14,14,14,4,4,14,14,14,14,14,0,9,9
	BYTE 9,9,0,0,14,4,15,4,4,4,4,15,4,14,0,0,9,9
	BYTE 9,9,9,0,14,4,4,4,4,4,4,4,4,14,0,9,9,9
	BYTE 9,9,9,0,14,14,14,14,14,14,14,14,14,14,0,9,9,9
	BYTE 9,9,9,0,14,14,14,0,0,0,0,14,14,14,0,9,9,9
	BYTE 9,9,9,0,0,0,0,0,9,9,0,0,0,0,0,9,9,9
	
CASTLECLR BYTE 9,9,9,9,0,9,9,9,9,9,9,0,12,12,12,12
	BYTE 9,9,9,9,0,9,9,9,9,9,9,0,12,12,9,9
	BYTE 9,9,9,0,12,0,9,9,9,9,9,0,9,9,9,9
	BYTE 9,9,0,12,12,12,0,0,9,0,9,0,0,0,0,9
	BYTE 9,9,0,12,12,12,0,15,0,15,0,15,0,15,0,9
	BYTE 9,9,0,0,0,0,0,15,15,15,15,15,15,15,0,9
	BYTE 9,9,0,15,15,15,0,15,0,15,0,15,0,15,0,15,0,9
	BYTE 9,9,0,15,0,15,0,15,15,15,15,15,15,15,0,9
	BYTE 9,9,0,15,15,15,0,12,12,12,12,12,12,12,0,9
	BYTE 9,0,0,0,15,0,0,15,15,0,0,15,15,15,0,9
	BYTE 9,0,12,0,0,15,15,0,0,15,15,0,15,15,0,9
	BYTE 0,12,12,12,0,15,15,15,15,15,15,0,15,15,0,9
	BYTE 0,12,12,12,0,15,0,15,15,0,15,0,15,0,0,9
	BYTE 0,0,0,0,0,15,0,15,15,0,15,0,0,12,0,0
	BYTE 0,15,15,15,0,15,15,15,15,15,15,0,12,12,12,0
	BYTE 0,15,0,0,0,15,0,0,0,0,15,0,0,0,12,0
	BYTE 0,15,0,15,0,0,0,15,15,0,0,0,15,0,12,0
	BYTE 0,15,0,15,15,15,15,15,15,15,15,15,15,0,12,0
	BYTE 0,15,0,15,15,15,15,0,0,15,15,15,15,0,0,0
	BYTE 0,15,0,15,15,15,0,0,0,0,15,15,15,0,15,0
	BYTE 0,15,0,15,15,15,0,0,0,0,15,15,15,0,15,0
	BYTE 0,15,0,15,15,15,0,0,0,0,15,15,15,0,15,0
	BYTE 0,15,0,15,15,15,0,0,0,0,15,15,15,0,15,0
	BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	
CIRCLE  BYTE 9,9,9,9,4,9,9,9,9
		BYTE 9,9,9,9,4,9,9,9,9
		BYTE 9,9,9,4,4,4,9,9,9
		BYTE 9,9,9,4,4,4,9,9,9
		BYTE 9,9,4,4,12,4,4,9,9
		BYTE 9,9,4,4,12,4,4,9,9
		BYTE 9,4,4,12,14,12,4,4,9
		BYTE 9,4,4,12,14,12,4,4,9
		BYTE 4,4,12,14,14,14,12,4,4
		BYTE 4,4,12,14,14,14,12,4,4
		BYTE 9,4,4,12,14,12,4,4,9
		BYTE 9,4,4,4,12,4,4,4,9
		BYTE 9,9,4,4,4,4,4,9,9
	
COIN BYTE 9,9,9,9,9,14,14,14,9,9,9,9,9
	BYTE 9,9,9,14,14,14,14,14,14,14,9,9,9
	BYTE 9,9,14,14,14,14,14,14,14,14,14,9,9
	BYTE 9,14,14,14,14,14,14,14,14,14,14,14,9
	BYTE 9,14,14,0,0,0,0,0,0,0,14,14,9
	BYTE 14,14,14,0,14,14,14,14,14,14,14,14,14
	BYTE 14,14,14,0,14,14,14,14,14,14,14,14,14
	BYTE 14,14,14,0,14,14,14,14,14,14,14,14,14
	BYTE 9,14,14,0,0,0,0,0,0,0,14,14,9
	BYTE 9,14,14,14,14,14,14,14,14,14,14,14,9
	BYTE 9,9,14,14,14,14,14,14,14,14,14,9,9
	BYTE 9,9,9,14,14,14,14,14,14,14,9,9,9
	BYTE 9,9,9,9,9,14,14,14,9,9,9,9,9
		
MOONSTARCLR BYTE   15,15,15,15,15,15,2,2,2
		BYTE 	2,2,2,2,2,2,15,2,2
		BYTE 	2,2,2,2,2,2,2,15,2
		BYTE 	2,2,2,2,15,2,2,2,15
		BYTE 	2,2,15,15,15,15,15,2,15
		BYTE 	2,2,2,15,15,15,2,2,15
		BYTE 	2,2,15,15,15,15,15,2,15
		BYTE 	2,2,2,2,2,2,2,15,2
		BYTE 	2,2,2,2,2,2,15,2,2
		BYTE 	15,15,15,15,15,15,2,2,2
		
	SCOREARR BYTE 'S','C','O','R','E', ':', ' '
	LIVESARR BYTE 'L','I','V','E','S', ':', ' '
	WORLDARR BYTE 'W','O','R','L','D', '-', ' '
	GAMEOVERARR BYTE 'G', 'A', 'M', 'E', ' ', 'O', 'V', 'E', 'R', '!' 
	WIN BYTE 'Y', 'O', 'U', ' ', 'L', 'O', 'S', 'E'
	LOSE BYTE 'Y', 'O', 'U', ' ', 'W', 'I', 'N', '!'
	SMARIO BYTE 'S','U','P','E','R', ' ', 'M', 'A', 'R', 'I', 'O', '!'
	
	USER DB 10 DUP ('$')
	WINLOSE WORD 1585
	MSG1 DB " ENTER USERNAME: ",'$'

	
	Xaxis WORD 20
	Yaxis WORD 270
	
	XE WORD 210
	YE WORD 289
	
	XE1 WORD 340
	YE1 WORD 289
	REFLECT1 WORD 2
	
	CE WORD ?
	CY WORD ?
	
	BOX WORD 200
	BOY WORD 10
	REFLECTB WORD 5
	BSI WORD 460
	
	XFLOOR WORD 0 
	YFLOOR WORD 320
	
	XTMP WORD ?
	TMP WORD ?
	
	SHOOT WORD 1
	REFLECT WORD 2
	TEMPX WORD ?
	SAVEY WORD ?
	WDH WORD 30
	HGT WORD 30
	COLOUR BYTE ?
	GETCLR BYTE ?
	BALLCLR BYTE ?
	BALLVAR WORD ?
	ECLR BYTE ?
	MARIOADD WORD ?
	GCLR BYTE ?
	LEVEL WORD 0
	ENDCORD WORD 590
	SWITCH WORD 1
	SCORE WORD 0
	COLOR BYTE 0
	LIVES WORD 3

.code

    MAIN PROC
	
		MOV AX, @DATA
		MOV DS, AX
		
		LEA DX, MSG1 ;PRINT MSG1
		MOV AH,9
		INT 21H
		
	
		MOV AH, 0AH ;SERVICE TO CAPTURE STRING FROM KEYBOARD.
        MOV DX, OFFSET USER
        INT 21H
		
		MOV AH,0    ;set video mode
		MOV AL,10H  ;choose mode 3
		INT 10H

		CALL CLS
		CALL SETBGD
		CALL DRAWFLOOR		
		CALL HURDLES
		CALL FLAG
		CALL DRAWCOIN
		CALL NEXTLEVEL

		MOV BX, BOX
		MOV CE, BX
		MOV BX, BOY
		MOV CY, BX
		
	MOV CX, 5		
	DISPLAY:
				
		CALL DRAWMARIO  ;DRAW MARIO
		CALL DISPLAYSTR
		CALL PRINTLIVES
		
		AGAIN:

			CALL FLOW
			CALL GRAVITY
			CALL GRAVITY
			MOV AX,0
			MOV AH, 01H
			INT 16H
			JZ AGAIN
			
			MOV AH, 00H
			INT 16H

			CALL MOVEMENT
			JMP DISPLAY
			
			J1:
			JMP AGAIN
					
	MOV CX, 5	
	LOOP DISPLAY	
			
	MOV AH, 4CH
	INT 21H

MAIN ENDP

FLOW PROC 

	CMP LEVEL, 1
	JE LEVEL1
	
	CMP LEVEL, 2
	JE LEVEL2
	
	CALL DRAWBOWSER	
	CALL MOVEBOWSER
	
	LEVEL2:
	CALL MOVEENEMY
    CALL DRAWENEMY
	CALL MOVEENEMY1
	CALL DRAWENEMY1
	
	LEVEL1:
	CMP SWITCH, 1
	JNE G0

	G0:
	
	RET
FLOW ENDP
DRAWLINECLR PROC USES AX BX CX DX  ; DRAW LINE FUNCION (X TO WIDTH)
	
	MOV CX, XFLOOR
	MOV XTMP, CX
	
	MOV CX, WDH
	L1:
		 MOV TEMPX, CX
		
		 MOV CX, XFLOOR
		 MOV DX, YFLOOR
		 MOV AL, COLOUR; COLOR
		 MOV BH, 0      ;PAGE NUMBER
		 MOV AH, 0Ch
		 INT 10H
		 
		 MOV AX, XFLOOR
		 INC AX
		 MOV XFLOOR, AX
		 
		 MOV CX, TEMPX

	LOOP L1
	
	MOV CX, XTMP
	MOV XFLOOR, CX

	RET
	
DRAWLINECLR ENDP

DRAWSQUARECLR PROC USES AX BX CX DX 

	MOV CX, YFLOOR
	MOV SAVEY, CX
	
		MOV CX, HGT ;Height (NO.OF LINES)
		L2:
			CALL DRAWLINECLR  ;draws straight line
			MOV BX, YFLOOR
			INC BX
			MOV YFLOOR, BX ;shifts line one pixel below
		LOOP L2
		
	MOV AX, SAVEY
	MOV YFLOOR, AX
		
	RET
	
DRAWSQUARECLR ENDP	
	
CLS PROC
	MOV AL,10H
	MOV AH,0
	INT 10H
  RET
CLS ENDP

DRAWFLOOR PROC 
	
	MOV XFLOOR, 0
	MOV YFLOOR, 321
	MOV HGT, 30
	MOV WDH, 640
	MOV COLOUR, 6
	CALL DRAWSQUARECLR
	
	RET
	
DRAWFLOOR ENDP

SETBGD PROC 

		MOV AH, 06h    ; Scroll up function
		XOR AL, AL     ; Clear entire screen
		XOR CX, CX     ; Upper left corner CH=row, CL=column
		MOV DX, 184FH  ; lower right corner DH=row, DL=column 
		MOV BH, 9 
		INT 10H

    RET
SETBGD ENDP


MOVEMENT PROC USES AX BX CX DX

	CALL DELETEMARIO
	
	;CHECKING RIGHT KEY
	 CMP AH,4DH
	 JNE N1
	 CALL COLLISION_RIGHT
	 CMP GETCLR, 2
	 JE DONTMOV

	 MOV DX,Xaxis
	 ADD DX,10
	 MOV Xaxis ,DX
	 CALL CHECKEND
	 JMP DONTMOV
	 
	 ;CHECKING LEFT KEY
	 N1:
	 CMP AH,4BH
	 JNE N2
	 CALL CHECKEND
	 CALL COLLISION_LEFT
	 CMP GETCLR ,2
	 JE DONTMOV

	 CMP Xaxis, 10
	 JL DONTMOV
	 MOV DX,Xaxis
	 SUB DX, 10
	 MOV Xaxis,DX
	 JMP DONTMOV
	 
	 ;CHECKING UP KEY
	 N2:
	 CMP AH,48H
	 JNE N3
	 MOV SWITCH, 1
	 .if Yaxis>150
	 MOV DX, Yaxis
	 SUB DX, 90
	 MOV Yaxis, DX
	 .endif
	 CALL DRAWMARIO	
	 CALL DELETEMARIO
	; CALL CHECKNEXT
	 JMP DONTMOV

	 ;CHECKING ESC KEY
	 N3:
	 CMP AH,01H
	 JNE DONTMOV
	 .EXIT
	 
	JMP DONTMOV 
	 
	KMARIO: 
		CALL KILLMARIO
		
	DONTMOV: 
	
	RET

MOVEMENT ENDP

GRAVITY PROC USES AX BX CX DX


		MOV MARIOADD, 0
		CALL COLLISION_DOWN
		CMP GCLR , 6
		JE G0 
		
		MOV MARIOADD, 0
		CALL COLLISION_DOWN
		CMP GCLR , 2
		JE G1
		
		MOV MARIOADD, 36
		CALL COLLISION_DOWN
		CMP GCLR , 2
		JE G2
		CALL DRAWMARIO
		
		CALL DELETEMARIO
		CALL FLOW
		
		MOV BX, Yaxis
		ADD BX, 10
		MOV Yaxis, BX
	JMP G1
		
	G0:
		MOV SWITCH, 0
		JMP G1
	G2:
		.IF Yaxis>320
		CALL DELETEENEMY
		CALL KILLENEMY
		.ENDIF
		
	G1:

		CALL DRAWMARIO	
	
	RET 

GRAVITY ENDP	

HURDLES PROC

;HURDLE 1
	MOV XFLOOR, 100
	MOV YFLOOR, 296
	MOV HGT, 25
	MOV WDH, 30
	MOV COLOUR, 2
	CALL DRAWSQUARECLR
	MOV XFLOOR, 96
	MOV YFLOOR, 270
	MOV HGT, 25
	MOV WDH, 38
	MOV COLOUR, 2
	CALL DRAWSQUARECLR
;HURDLE 2
	MOV XFLOOR, 300
	MOV YFLOOR, 256
	MOV HGT, 65
	MOV WDH, 30
	MOV COLOUR, 2
	CALL DRAWSQUARECLR
	MOV XFLOOR, 296
	MOV YFLOOR, 230
	MOV HGT, 25
	MOV WDH, 38
	MOV COLOUR, 2
	CALL DRAWSQUARECLR
;HURDLE 3
	MOV XFLOOR, 470
	MOV YFLOOR, 276
	MOV HGT, 45
	MOV WDH, 30
	MOV COLOUR, 2
	CALL DRAWSQUARECLR
	MOV XFLOOR, 466
	MOV YFLOOR, 250
	MOV HGT, 25
	MOV WDH, 38
	MOV COLOUR, 2
	CALL DRAWSQUARECLR	

	RET
		
HURDLES ENDP

FLAG PROC

	MOV XFLOOR, 620
	MOV YFLOOR, 70
	MOV HGT, 250
	MOV WDH, 10
	MOV COLOUR, 15
	CALL DRAWSQUARECLR
	
	MOV XFLOOR, 540
	MOV YFLOOR, 70
	MOV HGT, 75
	MOV WDH, 80
	MOV COLOUR, 2
	CALL DRAWSQUARECLR

	CALL MOONSTAR
	
	RET
FLAG ENDP

DELETEMARIO PROC USES AX BX CX DX 

	MOV CX, Xaxis
	MOV XFLOOR, CX
	MOV CX, Yaxis
	MOV YFLOOR, CX
	MOV WDH, 36
	MOV HGT, 51
	MOV COLOUR,9
	CALL DRAWSQUARECLR
	
	RET
DELETEMARIO ENDP

DRAWMARIO PROC USES AX BX CX DX 

	MOV WDH, 3
	MOV HGT, 3
	MOV BX, Xaxis
	MOV XFLOOR, BX
	MOV BX, Yaxis
	MOV YFLOOR, BX
	MOV BX, 256
	
	MOV CX, 17
	COOKIE:
		MOV DX, CX
		
		MOV CX, 12
		COOKIE0:
			MOV AL, ENEMYCLR[BX]
			MOV COLOUR,  AL
			CALL DRAWSQUARECLR
			MOV AX, XFLOOR
			ADD AX, 3
			MOV XFLOOR, AX
			INC BX
		LOOP COOKIE0
	
		MOV AX, YFLOOR
		ADD AX, 3
		MOV YFLOOR, AX
		MOV AX, Xaxis
		MOV XFLOOR, AX
		MOV CX, DX
	LOOP COOKIE
	
	RET
DRAWMARIO ENDP

DRAWENEMY PROC USES AX BX CX DX 

	MOV WDH, 2
	MOV HGT, 2
	MOV BX, XE
	MOV XFLOOR, BX
	MOV BX, YE
	MOV YFLOOR, BX
	
	MOV BX, 0;
	
	MOV CX, 16
	COOKIE1:
		MOV DX, CX
		
		MOV CX, 16
		COOKIE2:
			MOV AL, ENEMYCLR[BX]
			MOV COLOUR,  AL
			CALL DRAWSQUARECLR
			MOV AX, XFLOOR
			ADD AX, 2
			MOV XFLOOR, AX
			INC BX
			LOOP COOKIE2
	
		MOV AX, YFLOOR
		ADD AX, 2
		MOV YFLOOR, AX
		MOV AX, XE
		MOV XFLOOR, AX
		MOV CX, DX
	LOOP COOKIE1
	
	RET
DRAWENEMY ENDP	

DELETEENEMY PROC USES AX BX CX DX 

	MOV CX, XE
	MOV XFLOOR, CX
	MOV CX, YE
	MOV YFLOOR, CX
	MOV WDH, 32
	MOV HGT, 32
	MOV COLOUR,9
	CALL DRAWSQUARECLR
	
	RET
DELETEENEMY ENDP

MOVEENEMY PROC USES BX

	CALL DELETEENEMY
	
	CALL ENEMY_UP
	CMP ECLR, 9
	JE L0
	CALL KILLENEMY
	
	L0:
	CALL ENEMY_LEFT
	CMP ECLR, 15
	JNE L1
	CALL KILLMARIO
	
	L1:
	CALL ENEMY_RIGHT
	CMP ECLR, 15
	JNE L2
	CALL KILLMARIO
	
	L2:
	
	CMP XE, 142
	JE E1

	CMP XE, 268
	JE E2

	JMP E3
	
	E1:
		MOV REFLECT, 2
		JMP E3
	E2:
		MOV REFLECT, -2
		
	E3:	
		MOV BX, XE
		ADD BX, REFLECT
		MOV XE, BX
	RET
MOVEENEMY ENDP

DRAWENEMY1 PROC USES AX BX CX DX 

	MOV WDH, 2
	MOV HGT, 2
	MOV BX, XE1
	MOV XFLOOR, BX
	MOV BX, YE1
	MOV YFLOOR, BX
	
	MOV BX, 0;
	
	MOV CX, 16
	COOKIE1:
		MOV DX, CX
		
		MOV CX, 16
		COOKIE2:
			MOV AL, ENEMYCLR[BX]
			MOV COLOUR,  AL
			CALL DRAWSQUARECLR
			MOV AX, XFLOOR
			ADD AX, 2
			MOV XFLOOR, AX
			INC BX
			LOOP COOKIE2
	
		MOV AX, YFLOOR
		ADD AX, 2
		MOV YFLOOR, AX
		MOV AX, XE1
		MOV XFLOOR, AX
		MOV CX, DX
	LOOP COOKIE1
	
	RET
DRAWENEMY1 ENDP	

DELETEENEMY1 PROC USES AX BX CX DX 

	MOV CX, XE1
	MOV XFLOOR, CX
	MOV CX, YE1
	MOV YFLOOR, CX
	MOV WDH, 32
	MOV HGT, 32
	MOV COLOUR,9
	CALL DRAWSQUARECLR
	
	RET
DELETEENEMY1 ENDP

MOVEENEMY1 PROC USES BX

	CALL DELETEENEMY1
	
	CALL ENEMY_UP1
	CMP ECLR, 9
	JE L0
	CALL KILLENEMY1
	
	L0:
	CALL ENEMY_LEFT1
	CMP ECLR, 15
	JNE L1
	CALL KILLMARIO
	
	L1:
	CALL ENEMY_RIGHT1
	CMP ECLR, 15
	JNE L2
	CALL KILLMARIO
	
	L2:
	
	CMP XE1, 340
	JE E1

	CMP XE1, 430
	JE E2

	JMP E3
	
	E1:
		MOV REFLECT1, 2
		JMP E3
	E2:
		MOV REFLECT1, -2
		
	E3:	
		MOV BX, XE1
		ADD BX, REFLECT1
		MOV XE1, BX
	RET
MOVEENEMY1 ENDP

DRAWBOWSER PROC USES AX BX CX DX

	MOV WDH, 3
	MOV HGT, 3
	MOV BX, BOX
	MOV XFLOOR, BX
	MOV BX, BOY
	MOV YFLOOR, BX
	MOV BX, 460
	
	MOV CX, 18
	COOKIE:
		MOV DX, CX
		
		MOV CX, 18
		COOKIE0:
			MOV AL, ENEMYCLR[BX]
			MOV COLOUR,  AL
			CALL DRAWSQUARECLR
			MOV AX, XFLOOR
			ADD AX, 3
			MOV XFLOOR, AX
			INC BX
		LOOP COOKIE0
	
		MOV AX, YFLOOR
		ADD AX, 3
		MOV YFLOOR, AX
		MOV AX, BOX
		MOV XFLOOR, AX
		MOV CX, DX
	LOOP COOKIE
	
	RET
DRAWBOWSER ENDP

CASTLE PROC USES AX BX CX DX 

	MOV WDH, 6
	MOV HGT, 10
	MOV BX, 540
	MOV XFLOOR, BX
	MOV BX, 81
	MOV YFLOOR, BX
	MOV BX, 786
	
	MOV CX, 24
	COOKIE:
		MOV DX, CX
		
		MOV CX, 16
		COOKIE0:
			MOV AL, ENEMYCLR[BX]
			MOV COLOUR,  AL
			CALL DRAWSQUARECLR
			MOV AX, XFLOOR
			ADD AX, 6
			MOV XFLOOR, AX
			INC BX
		LOOP COOKIE0
	
		MOV AX, YFLOOR
		ADD AX, 10
		MOV YFLOOR, AX
		MOV AX, 540
		MOV XFLOOR, AX
		MOV CX, DX
	LOOP COOKIE
	
	RET
CASTLE ENDP

MOVEBOWSER PROC USES BX

	CALL DELETEBOWSER
	CALL MOVEBALL
	
	CMP BOX, 100
	JE E1

	CMP BOX, 450
	JE E2

	JMP E3
	
	E1:
		MOV REFLECTB, 5
		JMP E3
	E2:
		MOV REFLECTB, -5
		
	E3:	
		MOV BX, BOX
		ADD BX, REFLECTB
		MOV BOX, BX
	RET
MOVEBOWSER ENDP

DELETEBOWSER PROC USES CX

	MOV CX, BOX
	SUB CX, 5
	MOV XFLOOR, CX
	MOV CX, BOY
	ADD CX, 5
	MOV YFLOOR, CX
	MOV WDH, 10
	MOV HGT, 15
	MOV COLOUR,9
	CALL DRAWSQUARECLR
	MOV CX, BOX
	ADD CX, 54
	MOV XFLOOR, CX
	MOV CX, BOY
	ADD CX, 5
	MOV YFLOOR, CX
	MOV WDH, 10
	MOV HGT, 15
	MOV COLOUR,9
	CALL DRAWSQUARECLR
	
	RET
DELETEBOWSER ENDP

DRAWCIRCLE PROC USES AX BX CX DX

	MOV CX, CE
	MOV XFLOOR, CX
	MOV CX, CY
	MOV YFLOOR, CX
	MOV HGT, 2
	MOV WDH, 2
	MOV BX, 1170
	
	MOV CX, 13
		COOKIE1:
			MOV DX, CX
			
			MOV CX, 9
			COOKIE2:
				MOV AL, ENEMYCLR[BX]
				MOV COLOUR,  AL
				CALL DRAWSQUARECLR
				MOV AX, XFLOOR
				ADD AX, 2
				MOV XFLOOR, AX
				INC BX
				LOOP COOKIE2
		
			MOV AX, YFLOOR
			ADD AX, 2
			MOV YFLOOR, AX
			MOV AX, CE
			MOV XFLOOR, AX
			MOV CX, DX
		LOOP COOKIE1
	
	RET
DRAWCIRCLE ENDP

DELETECIRCLE PROC USES CX

	MOV CX, CE
	MOV XFLOOR, CX
	MOV CX, CY
	SUB CX, 10
	MOV YFLOOR, CX
	MOV WDH, 18
	MOV HGT, 26
	MOV COLOUR,9
	CALL DRAWSQUARECLR

	RET
DELETECIRCLE ENDP	

COLLISION_RIGHT PROC  USES AX BX CX DX
 
	MOV AH , 0Dh
	MOV BH ,0
	MOV CX , Xaxis 
	ADD CX , 37
	ADD CX, 10 ; CHANGE IN PC 
	MOV DX , Yaxis
	ADD DX , 33
	INT 10H
	MOV GETCLR, AL
 
	RET
COLLISION_RIGHT ENDP

COLLISION_LEFT PROC  USES AX BX CX DX

	MOV AH , 0Dh
	MOV BH ,0
	MOV CX , Xaxis 
	SUB CX, 20 ; CHANGE IN PC 
	MOV DX , Yaxis
	ADD DX , 33
	INT 10H
	MOV GETCLR, AL
 
	RET
COLLISION_LEFT ENDP

COLLISION_DOWN PROC  USES AX BX CX DX
 
	MOV AH , 0Dh
	MOV BH ,0
	MOV CX , Xaxis 
	ADD CX , MARIOADD
	MOV DX , Yaxis
	ADD DX, 1
	ADD DX , 54
	INT 10H
	MOV GCLR, AL
 
	RET
COLLISION_DOWN ENDP

ENEMY_RIGHT PROC  USES AX BX CX DX
 
	MOV AH , 0Dh
	MOV BH ,0
	MOV CX , XE
	ADD CX, 32
	ADD CX, 2 
	MOV DX , YE
	ADD DX , 16
	INT 10H
	MOV ECLR, AL
 
	RET
ENEMY_RIGHT ENDP

ENEMY_UP PROC  USES AX BX CX DX
 
	MOV AH , 0Dh
	MOV BH ,0
	MOV CX , XE
	ADD CX, 26
	MOV DX , YE
	SUB DX, 2 
	INT 10H
	MOV ECLR, AL
 
	RET
ENEMY_UP ENDP

ENEMY_LEFT PROC  USES AX BX CX DX

	MOV AH , 0Dh
	MOV BH ,0
	MOV CX , XE 
	SUB CX, 2; CHANGE IN PC 
	MOV DX , YE
	ADD DX , 16
	INT 10H
	MOV ECLR, AL
 
	RET
ENEMY_LEFT ENDP

ENEMY_RIGHT1 PROC  USES AX BX CX DX
 
	MOV AH , 0Dh
	MOV BH ,0
	MOV CX , XE1
	ADD CX, 32
	ADD CX, 2 
	MOV DX , YE1
	ADD DX , 16
	INT 10H
	MOV ECLR, AL
 
	RET
ENEMY_RIGHT1 ENDP

ENEMY_UP1 PROC  USES AX BX CX DX
 
	MOV AH , 0Dh
	MOV BH ,0
	MOV CX , XE1
	ADD CX, 26
	MOV DX , YE1
	SUB DX, 2 
	INT 10H
	MOV ECLR, AL
 
	RET
ENEMY_UP1 ENDP

ENEMY_LEFT1 PROC  USES AX BX CX DX

	MOV AH , 0Dh
	MOV BH ,0
	MOV CX , XE1 
	SUB CX, 2; CHANGE IN PC 
	MOV DX , YE1
	ADD DX , 16
	INT 10H
	MOV ECLR, AL
 
	RET
ENEMY_LEFT1 ENDP

COLLIDE_BALL PROC USES AX BX CX DX 

	MOV AH , 0Dh
	MOV BH ,0 
	MOV CX , CE
	ADD CX, BALLVAR
	MOV DX , CY
	ADD DX , 27
	INT 10H
	MOV BALLCLR, AL

	RET
COLLIDE_BALL ENDP

MOVEBALL PROC USES BX	
	
	CMP CY, 290
	JL S1
	CALL DELETECIRCLE ;RESET BALL 
	MOV BX, CY
	ADD BX, 10
	MOV CY, BX
	CALL DELETECIRCLE
	MOV CY, 64
	MOV BX, BOX
	MOV CE, BX
	
	S1:
	MOV BALLVAR, 9
	CALL COLLIDE_BALL
	CMP BALLCLR ,2
	JE DONTMOV
	CMP BALLCLR, 4
	JE KMARIO
	
	MOV BALLVAR, 26
	CALL COLLIDE_BALL
	CMP BALLCLR ,2
	JE DONTMOV
	CMP BALLCLR, 4
	JE KMARIO
	
	MOV BALLVAR, 0
	CALL COLLIDE_BALL
	CMP BALLCLR ,2
	JE DONTMOV
	CMP BALLCLR, 4
	JE KMARIO
	
	MOV BX, CY
	ADD BX, 10
	MOV CY, BX
	
	CALL DELETECIRCLE
	CALL DRAWCIRCLE
	
	JMP D0
	
	KMARIO:
		CALL KILLMARIO
		JMP D0
		
	DONTMOV:
		MOV BX, CY
		ADD BX, 10
		MOV CY, BX
		CALL DELETECIRCLE
		MOV CY, 64
		MOV BX, BOX
		MOV CE, BX
	D0:
	
	RET 
MOVEBALL ENDP

KILLMARIO PROC USES BX

	CALL DELETEMARIO
	MOV BX, LIVES
	DEC BX
	MOV LIVES, BX
	
	MOV Xaxis, 20
	MOV Yaxis, 270
	
	CALL DEATH
	
	RET
KILLMARIO ENDP

COMMENT @
CHECKNEXT PROC USES AX DX

	MOV AH, 11H
	INT 16H

	CMP AH, 4BH ;LEFT
	JNE KEY2
	
	MOV DX,Xaxis
	SUB DX, 100
	MOV Xaxis,DX
	MOV AH, 10H
	INT 16H
	JMP NOKEY
	
	KEY2:
	CMP AH, 4DH ;RIGHT
	JNE NOKEY
	MOV DX,Xaxis
	ADD DX, 100
	MOV AH,10H
	INT 16H
	MOV Xaxis ,DX
	
	NOKEY:
	
	RET
CHECKNEXT ENDP
@

CHECKEND PROC USES AX BX

	MOV BX, ENDCORD
	
	CMP Xaxis, 450
	JNE J2
	MOV AX, SCORE
	INC AX
	MOV SCORE, AX
	
	J2:
	CMP Xaxis, BX
	JL J1
	
	CALL NEXTLEVEL
	J1:
	RET
CHECKEND ENDP

NEXTLEVEL PROC USES BX

		MOV BX, LEVEL
		INC BX
		MOV LEVEL, BX
		
		CMP LEVEL, 4
		JL GAME1
		CALL STATUS
		CALL PRINTUN
		CALL GAMEOVER
		.EXIT
		
		GAME1:
		
		MOV Xaxis, 20
		MOV Yaxis, 270
		MOV XE, 210
		MOV YE, 289
		
		MOV XE1, 340
		MOV YE1, 289
		
		CMP LEVEL, 3
		JNE L1
		CALL CLS
		CALL SUPERMARIO
		CALL PRINTUN
		CALL WORLD		
		CALL SETBGD
		CALL DRAWFLOOR		
		CALL HURDLES
		CALL CASTLE
		CALL DRAWCOIN
		MOV ENDCORD, 510
		MOV BX, BOX
		MOV CE, BX
		MOV BX, BOY
		MOV CY, BX
		JMP L3
		
		L1:
		CALL CLS
		CALL SUPERMARIO
		CALL PRINTUN
		CALL WORLD		
		CALL SETBGD
		CALL DRAWFLOOR		
		CALL HURDLES
		CALL DRAWCOIN
		MOV BX, BOX
		MOV CE, BX
		MOV BX, BOY
		MOV CY, BX

		L2:
			CALL FLAG
		L3:
	
	RET 
NEXTLEVEL ENDP

DRAWCOIN PROC 

	MOV XFLOOR, 475
	MOV YFLOOR, 220
	MOV HGT, 2
	MOV WDH, 2
	MOV BX, 1287
	
	MOV CX, 13
		COOKIE1:
			MOV DX, CX
			
			MOV CX, 13
			COOKIE2:
				MOV AL, ENEMYCLR[BX]
				MOV COLOUR,  AL
				CALL DRAWSQUARECLR
				MOV AX, XFLOOR
				ADD AX, 2
				MOV XFLOOR, AX
				INC BX
				LOOP COOKIE2
		
			MOV AX, YFLOOR
			ADD AX, 2
			MOV YFLOOR, AX
			MOV AX, 475
			MOV XFLOOR, AX
			
			MOV CX, DX
		LOOP COOKIE1
	
	RET
DRAWCOIN ENDP

KILLENEMY PROC USES BX

	.IF YE != 360
		MOV BX, SCORE
		INC BX
		MOV SCORE, BX
	.ENDIF
	
	MOV XE, 0
	MOV YE, 360

	RET
KILLENEMY ENDP

KILLENEMY1 PROC USES BX

	.IF YE1 != 360
		MOV BX, SCORE
		INC BX
		MOV SCORE, BX
	.ENDIF
	
	MOV XE1, 0
	MOV YE1, 360

	RET
KILLENEMY1 ENDP

MOONSTAR PROC USES AX BX CX DX

	MOV XFLOOR, 570
	MOV YFLOOR, 90
	MOV HGT, 4
	MOV WDH, 4
	MOV BX, 1456
	
	MOV CX, 10
		COOKIE1:
			MOV DX, CX
			
			MOV CX, 9
			COOKIE2:
				MOV AL, ENEMYCLR[BX]
				MOV COLOUR,  AL
				CALL DRAWSQUARECLR
				MOV AX, XFLOOR
				ADD AX, 4
				MOV XFLOOR, AX
				INC BX
				LOOP COOKIE2
		
			MOV AX, YFLOOR
			ADD AX, 4
			MOV YFLOOR, AX
			MOV AX, 570
			MOV XFLOOR, AX
			
			MOV CX, DX
		LOOP COOKIE1
	
	RET

MOONSTAR ENDP

DISPLAYSTR PROC USES AX BX CX DX SI

	MOV SI, 1546
	MOV CX, 7
	
	L1:
		MOV TMP, CX
		
		MOV  AH,2
		MOV  DH,0        ; ROW 10
	    INC DL       ; COLUMN 20
		MOV  BH,0         ; VIDEO PAGE 0
		INT  10H

		MOV  AH,0AH
		MOV  AL, ENEMYCLR[SI]        ; ASCII CHARACTER
		MOV  BH,0          ; VIDEO PAGE 0
		MOV  CX,1          ; REPETITION COUNT
		INT  10H
				
		INC SI
		MOV CX, TMP
		
	LOOP L1
	
	MOV DX, SCORE
	ADD DX, 48
	MOV  AH,0AH
	MOV  AL, DL        ; ASCII CHARACTER
	MOV  BH,0          ; VIDEO PAGE 0
	MOV  CX,1          ; REPETITION COUNT
	INT  10H
	
  RET
DISPLAYSTR ENDP

PRINTLIVES PROC USES AX BX CX DX SI
	
	MOV SI, 1553
	MOV CX, 7
	
	MOV  AH,2
	MOV  DH, 0     ; ROW 
	MOV DL, 10       ; COLUMN 
	MOV  BH,0         ; VIDEO PAGE 0
	INT  10H
	
	L1:
		MOV TMP, CX
		
		MOV  AH,2
		MOV  DH, 0       ; ROW 
	    INC DL       	; COLUMN 
		MOV  BH,0         ; VIDEO PAGE 0
		INT  10H

		MOV  AH,0AH
		MOV  AL, ENEMYCLR[SI]        ; ASCII CHARACTER
		MOV  BH,0          ; VIDEO PAGE 0
		MOV  CX,1          ; REPETITION COUNT
		INT  10H
				
		INC SI
		MOV CX, TMP
		
	LOOP L1
	
	MOV DX, LIVES
	ADD DX, 48
	MOV  AH,0AH
	MOV  AL, DL        ; ASCII CHARACTER
	MOV  BH,0          ; VIDEO PAGE 0
	MOV  CX,1          ; REPETITION COUNT
	INT  10H
	
	RET
PRINTLIVES ENDP

PRINTUN PROC USES AX BX CX DX SI
	
	MOV SI, 1607
	MOV CX, SIZEOF USER
	
	MOV  AH,2
	MOV  DH, 12     ; ROW 
	MOV DL, 36       ; COLUMN 
	MOV  BH,0         ; VIDEO PAGE 0
	INT  10H
	
	L1:
		MOV TMP, CX
		
		.IF ENEMYCLR[SI+1] == '$'
		JMP L2
		.ENDIF
		
		MOV  AH,2
		MOV  DH, 12     ; ROW 
	    INC DL       	; COLUMN 
		MOV  BH,0         ; VIDEO PAGE 0
		INT  10H

		MOV  AH,0AH
		MOV  AL, ENEMYCLR[SI]        ; ASCII CHARACTER
		MOV  BH,0          ; VIDEO PAGE 0
		MOV  CX,1          ; REPETITION COUNT
		INT  10H
				
		INC SI
		MOV CX, TMP
		
	LOOP L1
	
	L2:
	MOV CX, 0011h
	MOV DX, 1111h; CX:DX Number of microseconds to elapse
	MOV AH, 86H
	INT 15H
	
	RET
PRINTUN ENDP

PRINTWORLD PROC USES AX BX CX DX SI
	
	MOV SI, 1560
	MOV CX, 7
	
	MOV  AH,2
	MOV  DH, 10        ; ROW 
	MOV DL, 35     ; COLUMN 
	MOV  BH,0         ; VIDEO PAGE 0
	INT  10H
	
	L1:
		MOV TMP, CX
		
		MOV  AH,2
	    INC DL       ; COLUMN 
		MOV  BH,0         ; VIDEO PAGE 0
		INT  10H

		MOV  AH,0AH
		MOV  AL, ENEMYCLR[SI]        ; ASCII CHARACTER
		MOV  BH,0          ; VIDEO PAGE 0
		MOV  CX,1          ; REPETITION COUNT
		INT  10H
				
		INC SI
		MOV CX, TMP
		
	LOOP L1
	
	MOV DX, LEVEL
	ADD DX, 48
	MOV  AH,0AH
	MOV  AL, DL        ; ASCII CHARACTER
	MOV  BH,0          ; VIDEO PAGE 0
	MOV  CX,1          ; REPETITION COUNT
	INT  10H
	
  RET
	
PRINTWORLD ENDP

DEATH PROC 

	.IF LIVES <= 0
		MOV LEVEL, 4
		MOV WINLOSE, 1577
		CALL NEXTLEVEL
	.ENDIF
	
	RET

DEATH ENDP

GAMEOVER PROC USES AX BX CX DX SI

	MOV SI, 1567
	MOV CX, 10
	
	MOV  AH,2
	MOV  DH, 10        ; ROW 
	MOV DL, 34     ; COLUMN 
	MOV  BH,0         ; VIDEO PAGE 0
	INT  10H
	
	L1:
		MOV TMP, CX
		
		MOV  AH,2
	    INC DL       ; COLUMN 
		MOV  BH,0         ; VIDEO PAGE 0
		INT  10H

		MOV  AH,0AH
		MOV  AL, ENEMYCLR[SI]        ; ASCII CHARACTER
		MOV  BH,0          ; VIDEO PAGE 0
		MOV  CX,1          ; REPETITION COUNT
		INT  10H
				
		INC SI
		MOV CX, TMP
		
	LOOP L1
	
		MOV CX, 0011h
		MOV DX, 1111h; CX:DX Number of microseconds to elapse
		MOV AH, 86H
		INT 15H
		
		.EXIT
	
  RET
  
GAMEOVER ENDP

STATUS PROC USES AX BX CX DX SI

	MOV SI, WINLOSE
	MOV CX, 8
	
	MOV  AH,2
	MOV  DH, 8        ; ROW 
	MOV DL, 35     ; COLUMN 
	MOV  BH,0         ; VIDEO PAGE 0
	INT  10H
	
	L1:
		MOV TMP, CX
		
		MOV  AH,2
	    INC DL       ; COLUMN 
		MOV  BH,0         ; VIDEO PAGE 0
		INT  10H

		MOV  AH,0AH
		MOV  AL, ENEMYCLR[SI]        ; ASCII CHARACTER
		MOV  BH,0          ; VIDEO PAGE 0
		MOV  CX,1          ; REPETITION COUNT
		INT  10H
				
		INC SI
		MOV CX, TMP
		
	LOOP L1
	
		MOV CX, 0011h
		MOV DX, 1111h; CX:DX Number of microseconds to elapse
		MOV AH, 86H
		INT 15H
	
  RET
  
STATUS ENDP

SUPERMARIO PROC USES AX BX CX DX SI

	MOV SI, 1593
	MOV CX, 12
	
	MOV  AH,2
	MOV  DH, 8        ; ROW 
	MOV DL, 33     ; COLUMN 
	MOV  BH,0         ; VIDEO PAGE 0
	INT  10H
	
	L1:
		MOV TMP, CX
		
		MOV  AH,2
	    INC DL       ; COLUMN 
		MOV  BH,0         ; VIDEO PAGE 0
		INT  10H

		MOV  AH,0AH
		MOV  AL, ENEMYCLR[SI]        ; ASCII CHARACTER
		MOV  BH,0          ; VIDEO PAGE 0
		MOV  CX,1          ; REPETITION COUNT
		INT  10H
				
		INC SI
		MOV CX, TMP
		
	LOOP L1
	
		MOV CX, 0011h
		MOV DX, 1111h; CX:DX Number of microseconds to elapse
		MOV AH, 86H
		INT 15H
	
	RET
SUPERMARIO ENDP

WORLD PROC USES AX CX DX

		CALL PRINTWORLD
		MOV CX, 001Fh
		MOV DX, 1111h; CX:DX Number of microseconds to elapse
		MOV AH, 86H
		INT 15H
		
	RET	
WORLD ENDP
END MAIN